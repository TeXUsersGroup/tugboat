$Id$
TUGboat crossref processing for doi registration. Public domain.
Originally written 2020 Karl Berry.

The general idea is use the capsule file as the input source for a given
issue. captub converts those to .rpi files (one per article). The .rpi
files are read by the ltx2crossrefxml script, which outputs one xml
issue for the whole issue, which we then upload to crossref.org.

In more detail: captub writes a separate .rpi file for each article for
which we want to register a doi; it also constructs the (html) "landing
pages" which is what the https://doi.org/... urls will resolve to.

See ../Makefile and the ../cr-do-issue script for the overall process.
The ./Makefile here directs the crossref preparation and uploading.

The upload amounts to an HTTPS POST, done with the
./crossref-upload-tool.jar provided by Crossref. There is a test host to
use with new data before uploading to their production host and
registering the dois (and getting charged).

We save the .xml files as uploaded to production, as well as the content
that goes into them and the landing files, so that if we need to make
corrections, we don't have to go through all the regeneration steps.

Along with the issue.xml for crossref, the scripts simultaneously
prepare a set of html "landing" files, which are what the doi urls
resolve to. There's an overview of the process in the sibling file
./README-landing.txt here, and exact steps are given in
./README-process.txt.

To summarize:
capsules/*.txt - the source text
capsules/crossref/dir0.capout/   - autogenerated rpi/html from captub.
capsules/crossref/dir1.lndout/   - autogenerated final .html landing pages,
                                   plus bbl/abs files from tub source dir.
capsules/crossref/dir2.process/  - temporary rpi+xml in process
capsules/crossref/dir3.uploaded/ - archive of files that have been uploaded

Other files here:
crossref-upload-tool.jar - as downloaded from crossref (no sources).
crossref-user.txt - username/password for the crossref upload (not committed).
ltx2crossrefxml-tugboat.cfg - journal-specific config for ltx2crossrefxml.

Addenda:
1) The ltx2crossrefxml script is part of https://ctan.org/pkg/crossrefware.
The development, rather than released, version may be required. Its
location can be given in ./Makefile, or can make a symlink here.

2) crossref.org is the doi registrar for scholarly papers. Their web
site has decent documentation on most aspects of this process, and their
schema that we target with the xml is well annotated.

3) the .rpi extension name comes from Res Philosophica, the journal for
which this support was originally created, by Boris Veytsman.

4) The full process of publishing an issue is at the end of the
README-tug-procedures file elsewhere on tug.org.
