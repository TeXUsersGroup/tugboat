#!/usr/bin/env perl
# $Id$
# Configuration file for ltx2crossrefxml.pl (from crossrefware).

# Name of the depositor
$depositorName='TUGboat production';

# Email
$depositorEmail='doi-tugboat@tug.org';

# Organization
$registrant='TeX Users Group';

# The rest is self-evident
$fullTitle="TUGboat";
$issn="0896-3207";

# TUGboat has no coden or abbreviated title.

# TUGboat conversions for plain text. Unicode should become
# \x{....} as a string, not a character.
#
sub LaTeX_ToUnicode_convert_hook {
  my ($string,$options) = @_;
  
  my $endcw = $LaTeX::ToUnicode::endcw;
  die "no endcw regexp in LaTeX::ToUnicode??" if ! $endcw;

  # Eliminate some raw TeX commands we end up using.
  $string =~ s/\\[hv]fill?$endcw//g;
  $string =~ s/\\[hv]filneg$endcw//g;
  $string =~ s/\\[hv]ss$endcw//g;
  $string =~ s/\\manualsl$endcw//g;
  $string =~ s/\\ninesl$endcw//g;

  # These take arguments, which we want in the output. Bare braces {...}
  # are removed after all the conversions, so we only need remove the
  # control sequence.
  $string =~ s/\\acro$endcw//g;
  $string =~ s/\\hologo$endcw//g;
  $string =~ s/\\rlap$endcw//g;
  $string =~ s/\\smash$endcw//g;
  
  # \titleref takes an argument that we want to do something with.
  # \tref and \booktitle are synonyms.
#warn "hello $string\n";
  $string =~ s,\\(titleref|tref|booktitle)$endcw\{(.*?)\},\\emph{$2},g;
#warn "   -> $string\n";
  
  # Slanted title.
  $string =~ s/\\CandT$endcw/\\textsl{Computers \& Typesetting}/g;
  
  # Although \verb is generic LaTeX, this is too fragile to be in btxperllibs.
  # We don't try to handle HTML-special characters here.
  $string =~ s,\\verb(.)(.*?)(\1),<tt>$2</tt>,g;
  #warn "1=$1, 2=$2, 3=$3, $string\n";

  # arbitrary Unicode character; this command doesn't exist in (La)TeX
  # TUGboat, but useful for translating, e.g., tb130knuth-tuneup.bbl.
  $string =~ s,\\tbunichar$endcw\{(.*?)\},\\x{$1}},g;

  # Package names, etc.
  $string =~ s,\\tbcode$endcw\{(.*?)\},\\texttt{$1},g;

  # backslashes and braces.
  # 
  # By the way, for plain text output, namely bibliographies, we don't
  # preserve font changes, so the bbls on the landing pages don't have
  # typewriter. Just mentioning here since it's especially noticeable.
  $string =~ s,\\cs$endcw\{(.*?)\},\\texttt{\\textbackslash $1},g;
  $string =~ s,\\tubbraced$endcw\{(.*?)\}
              ,\\texttt{\\textbraceleft\ $1\\textbraceright},gx;

  # 
  # no arguments, non-empty replacements.
  $string =~ s/\\AllTeX$endcw/(La)TeX/g;
  $string =~ s/\\AMS$endcw/American Mathematical Society/g;
  $string =~ s/\\API$endcw/API/g;
  $string =~ s/\\ASCII$endcw/ASCII/g;
  $string =~ s/\\AW$endcw/Addison-Wesley/g;
  $string =~ s/\\Bib$endcw/Bib/g;
  $string =~ s/\\CSS$endcw/CSS/g;
  $string =~ s/\\CSTUG$endcw/CSTUG/g;
  $string =~ s/\\CTAN$endcw/CTAN/g;
  $string =~ s/\\CWEB$endcw/CWEB/g;
  $string =~ s/\\ConTeXt$endcw/ConTeXt/g;
  $string =~ s/\\Dash$endcw/\\x{2014}/g; # em dash
  $string =~ s/\\DTD$endcw/DTD/g;
  $string =~ s/\\FAQ$endcw/FAQ/g;
  $string =~ s/\\GNU$endcw/GNU/g;
  $string =~ s/\\HarfBuzz$endcw/HarfBuzz/g;
  $string =~ s/\\Hawaii$endcw/Hawai`i/g;
  $string =~ s/\\HINT$endcw/HINT/g;
  $string =~ s/\\HTML$endcw/HTML/g;
  $string =~ s/\\ISBN$endcw/ISBN/g;
  $string =~ s/\\LaTeXML$endcw/LaTeXML/g;
  $string =~ s/\\LaTeXe$endcw/LaTeX2e/g;
  $string =~ s/\\LuaLaTeX$endcw/LuaLaTeX/g;
  $string =~ s/\\MathML$endcw/MathML/g;
  $string =~ s/\\MFB$endcw/The Metafontbook/g;
  $string =~ s/\\MPLIB$endcw/MPLIB/g;
  $string =~ s/\\NTS$endcw/NTS/g;
  $string =~ s/\\OPmac$endcw/OPmac/g;
  $string =~ s/\\OpTeX$endcw/OpTeX/g;
  $string =~ s/\\PDF$endcw/PDF/g;
  $string =~ s/\\PS$endcw/PostScript/g;
  $string =~ s/\\TB$endcw/The TeXbook/g;
  $string =~ s/\\TP$endcw/TeX: The\\x{00A0}Program/g;
  $string =~ s/\\TEI$endcw/TEI/g;
  $string =~ s/\\Thanh$endcw/H\\x{00E0}n Th\\x{1EBF} Th\\x{00E0}nh/g;
  $string =~ s/\\TUB$endcw/TUGboat/g;
  # don't do \TUG since it can be either "TUG" or "TeX Users Group".
  $string =~ s/\\TikZ$endcw/TikZ/g;
  $string =~ s/\\WEB$endcw/WEB/g;
  $string =~ s/\\WYSIWYG$endcw/WYSIWYG/g;
  $string =~ s/\\XHTML$endcw/XHTML/g;
  $string =~ s/\\XML$endcw/XML/g;
  $string =~ s/\\XSLT$endcw/XSLT/g;
  #
  #  ConTeXt all-caps.
  $string =~ s/\\ALEPH$endcw/Aleph/g;
  $string =~ s/\\CONTEXT$endcw/ConTeXt/g;
  $string =~ s/\\LMTX$endcw/LMTX/g;
  $string =~ s/\\LUA$endcw/Lua/g;
  $string =~ s/\\LUAMETATEX$endcw/LuaMetaTeX/g;
  $string =~ s/\\LUATEX$endcw/LuaTeX/g;
  $string =~ s/\\METAFONT$endcw/Metafont/g;
  $string =~ s/\\METAPOST$endcw/MetaPost/g;
  $string =~ s/\\MKII$endcw/MkII/g;
  $string =~ s/\\MKIV$endcw/MkIV/g;
  $string =~ s/\\MKXL$endcw/MkXL/g;
  $string =~ s/\\OPENTYPE$endcw/OpenType/g;
  $string =~ s/\\PDFTEX$endcw/pdfTeX/g;
  $string =~ s/\\TEX$endcw/TeX/g;
  $string =~ s/\\TEXLIVE$endcw/TeX Live/g;
  $string =~ s/\\TYPEONE$endcw/Type\\x{00A0}1/g;
  $string =~ s/\\UNICODE$endcw/Unicode/g;
  $string =~ s/\\XETEX$endcw/XeTeX/g;
  #
  # lowercase control words.
  $string =~ s/\\ams$endcw/AMS/g;
  $string =~ s/\\break$endcw/ /g;
  $string =~ s/\\dash$endcw/\\x{2013}/g; # en-dash
  $string =~ s/\\epTeX$endcw/epTeX/g;
  $string =~ s/\\fntcjkserif$endcw/ /g;
  $string =~ s/\\hyph$endcw/-/g;
  $string =~ s/\\latex$endcw/LaTeX/g;
  $string =~ s/\\makefourht$endcw/make4ht/g;
  $string =~ s/\\mlBibTeX$endcw/mlBibTeX/g;
  $string =~ s/\\newline$endcw/ /g;
  $string =~ s/\\pTeX$endcw/pTeX/g;
  $string =~ s/\\pdftex$endcw/pdfTeX/g;
  $string =~ s/\\slMF$endcw/Metafont/g;
  $string =~ s/\\slash$endcw/\//g;
  $string =~ s/\\smallbreak$endcw/ /g;
  $string =~ s/\\tbUTF$endcw/UTF/g;
  $string =~ s/\\tex$endcw/TeX/g;
  $string =~ s/\\tug$endcw/TUG/g;
  $string =~ s/\\upTeX$endcw/upTeX/g;
  #
  $string =~ s/\$\{*\\chi\}*\$/\\x{03C7}/g; # ar$\chi$iv
  
  # 
  # tb136andre-prehistory bibliography.
  $string =~ s/\\siecle$endcw\{(.*?)\}/uc($1) . "\\ieme\\ si\\`ecle"/ge;  
  $string =~ s/\\nom$endcw//g;
  $string =~ s/\\nomfr$endcw\{(.*?)\}\{(.*?)\}/$2/ge;  
#  $string =~ s,\\ieme$endcw,<sup><small>e</small></sup>,g;
#  $string =~ s,\\ieme$endcw,\\textsuperscript\{e\},g;
  # this is a superscript e (MODIFIER LETTER SMALL E) in the phonetic
  # block. Not correct semantically, but maybe better than just an e?
  $string =~ s,\\ieme$endcw,\\x{1D49},g;

  # Finston bibliographies.
  $string =~ s/\\GTDL$endcw/GNU 3DLDF/g;

  # Hufflen bibliographies.
  $string =~ s,\\(begin|end)$endcw\{bblquotedtitle\}\s*,,g;
  $string =~ s,\\begin$endcw\{otherlanguage\*?\}{.*?}\s*,,g;
  $string =~ s,\\end$endcw\{otherlanguage\*?\}\s*,,g;
  #
  $string =~ s/\\packagename$endcw//g;
  $string =~ s/\\pgname$endcw//g;
  #
  $string =~ s/\\logo\{guit\}/GuIT/g;
  $string =~ s/\\logo\{(.*?)\}/uc($1)/ge;
#  $string =~ s/\\logo\{mit\}/MIT/g;
#  $string =~ s/\\logo\{ml\}/ML/g;
#  $string =~ s/\\logo\{tug\}/TUG/g;
  #
  $string =~ s/\\pgC$endcw/C/g;
  $string =~ s/\\pgScheme$endcw/Scheme/g;
  $string =~ s/\\pgUnicode$endcw/Unicode/g;
  $string =~ s/\\pgbiber$endcw/Biber/g;
  #
  $string =~ s/\\capitalize\\bblin\{\}/In/g;
  $string =~ s/\\bbland$endcw/and/g;
  $string =~ s/\\bbled$endcw/ed/g;
  $string =~ s/\\bbledn$endcw/ed/g; # followed by period in source
  $string =~ s/\\bbleds$endcw/eds./g;
  $string =~ s/\\bblno$endcw/n./g;
  $string =~ s/\\bblof$endcw/of/g;
  $string =~ s/\\bblpp$endcw/pp./g;
  $string =~ s/\\bblsecondo$endcw/2nd/g;
  $string =~ s/\\bblthirdo$endcw/3rd/g;
  $string =~ s/\\bblfourtho$endcw/4th/g;
  $string =~ s/\\bblfiftho$endcw/5th/g;
  $string =~ s/\\bblvol$endcw/v./g;
  $string =~ s/\\bblwith$endcw/with/g;
  #
  $string =~ s/\\bbljan$endcw/Jan./g;
  $string =~ s/\\bblfeb$endcw/Feb./g;
  $string =~ s/\\bblmar$endcw/Mar./g;
  $string =~ s/\\bblapr$endcw/Apr./g;
  $string =~ s/\\bblmay$endcw/May/g;
  $string =~ s/\\bbljun$endcw/Jun./g;
  $string =~ s/\\bbljul$endcw/Jul./g;
  $string =~ s/\\bblaug$endcw/Aug./g;
  $string =~ s/\\bblsep$endcw/Sept./g;
  $string =~ s/\\bbloct$endcw/Oct./g;
  $string =~ s/\\bblnov$endcw/Nov./g;
  $string =~ s/\\bbldec$endcw/Dec./g;
  
  # tb136mitt-history bibliography.
  $string =~ s/\\bibAnnote$endcw\{(.*?)\}//g; # ignore first arg only
  $string =~ s/\\noquote$endcw//g;
  $string =~ s/\\slatex$endcw/standard LaTeX/g;
  $string =~ s/\\texdoc$endcw\{(.*?)\}/Locally available via: \\texttt\{texdoc $1\}/g;
  $string =~ s/\\xAuthor$endcw\{(.*?)\}//g; # index -> ignore
  $string =~ s/\\Author$endcw\{(.*?)\}/$1/g;
  $string =~ s/\\LaTeXIIIproglayer$endcw/L3 programming layer/g;
  $string =~ s/\\LaTeXTeam$endcw/LaTeX Project Team/g;  
  $string =~ s/\\Prog$endcw//g;

  # Talbot (occasionally other) control sequences.
  $string =~ s/\\(app|cls|ext|field|pkg|sty)$endcw//g;

  # Voss bibliographies.
  $string =~ s/\\Lpack$endcw//g;
  
  # Wermuth bibliographies.
  $string =~ s/(\\par$endcw)?\\[bB]iburl$endcw(.*?)\\endurl/ \\url{$2}/mg;
  $string =~ s/\\[eE]ndbib\([0-9-]+\)//g;

  # ignore {abstract} environment markers.
  $string =~ s,\\(begin|end)$endcw\{abstract\}\s*,,g;

  # Remove "compact" in TUB's compactenumerate, compactitemize environments.
  $string =~ s,\\(begin|end)$endcw\{compact,\\$1\{,g;

  # 
  # Output for our url abbreviations, and other commands, depends on
  # whether we're generating plain text or HTML.
  if ($options->{html}) {
      # HTML output.
      # \tbhurl{URLBASE} -> <a href="http://URLBASE">URLBASE</a>
      $string =~ s,\\tbhurl$endcw\{([^}]*)\}
               ,<a href="http://$1">$1</a>,gx;
      #
      # \tbsurl{URLBASE} -> <a href="https://URLBASE">URLBASE</a>
      $string =~ s,\\tbsurl$endcw\{([^}]*)\}
                  ,<a href="https://$1">$1</a>,gx;
      # Remove duplicated protocol; the macro strips off one if present.
      # Don't worry about http vs. https, just assume https.
      $string =~ s,https?://https?://,https://,g;
      
      # varepsilon, and no line break at hyphen.
      $string =~ s,\\eTeX$endcw,\\x{03B5}<nobr>-</nobr>TeX,g;
      
      # simplistic environment handling. should move to btxperllibs qqq
      $string =~ s,\\begin$endcw\{itemize\},<ul>,g;
      $string =~ s,\\end$endcw\{itemize\},</ul>,g;
      $string =~ s,\\begin$endcw\{enumerate\},<ol>,g;
      $string =~ s,\\end$endcw\{enumerate\},</ol>,g;
      $string =~ s,\\item$endcw,<li>,g;
  
  } else {
      # for plain text output, we can just prepend the protocol://.
      $string =~ s,\\tbhurl$endcw,http://,g;
      $string =~ s,\\tbsurl$endcw,https://,g;
      $string =~ s,https?://https?://,https://,g;

      # This has markup in the html version.
      $string =~ s,\\eTeX$endcw,\\x{03B5}-TeX,g;
      
      # what to do with lists for plain text? I don't know.
      # Let's translate \item to a bullet for tb136andre-prehistory bbl.
      $string =~ s,\\item$endcw,\\x{2022},g;
  }

  # things we throw away.
  $string =~ s/\\gobble\s*\\[a-zA-Z]+//g; # \gobble\cs
  $string =~ s/\\gobble\s*\\[^a-zA-Z]//g; # \gobble\.
  $string =~ s/\\gobble\s*\{[^}]*\}//g;   # \gobble{grp}
  $string =~ s/\\gobble$endcw[^\\]//g;    # \gobble t
  #
  $string =~ s/\\noopsort\s*\{[^}]*\}//g;   # \noopsort{grp}
  $string =~ s/\\UseExtraLabel\s*//g;       # harvard bbl
  #
  # \hspace and \vspace, with *-forms. should move to btxperllibs qqq
  $string =~ s/\\[hv]space\s*\*\s*\{[^}]*\}//g;
  #
  return $string;
}

# Must return true.
1;
